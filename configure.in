AC_INIT(README.Force)
AC_CANONICAL_TARGET
OPENIPMI_PKG_NAME=OpenIPMI
OPENIPMI_VERSION_MAJOR=1
OPENIPMI_VERSION_MINOR=4
OPENIPMI_VERSION_RELEASE=4
OPENIPMI_VERSION_EXTRA=
AM_INIT_AUTOMAKE(OpenIPMI, ${OPENIPMI_VERSION_MAJOR}.${OPENIPMI_VERSION_MINOR}.${OPENIPMI_VERSION_RELEASE}${OPENIPMI_VERSION_EXTRA})

SNMPLIBS=

# Where do we find the UCD SNMP includes and libs
tryucdsnmp=yes
AC_ARG_WITH(ucdsnmp,
[  --with-ucdsnmp=PATH             Look for ucdsnmp in PATH.],
    if test "x$withval" = "xyes"; then
      tryucdsnmp=yes
    elif test "x$withval" = "xno"; then
      tryucdsnmp=no
    elif test -d "$withval"; then
      CPPFLAGS="-I$withval/include $CPPFLAGS"
      SNMPLIBS="-L$withval/lib $SNMPLIBS"
      tryucdsnmp=yes
    fi,
)

# If UCD SNMP requires OpenSSL, this tells where to find the crypto lib
tryopenssl=yes
AC_ARG_WITH(openssl,
[  --with-openssl=PATH             Look for openssl in PATH.],
    if test "x$withval" = "xyes"; then
      tryopenssl=yes
    elif test "x$withval" = "xno"; then
      tryopenssl=no
    elif test -d "$withval"; then
      SNMPLIBS="-L$withval/lib $SNMPLIBS"
      tryopenssl=yes
    fi,
)

tryglib=yes
AC_ARG_WITH(glib,
[  --with-glib                     Look for glib.],
    if test "x$withval" = "xyes"; then
      tryglib=yes
    elif test "x$withval" = "xno"; then
      tryglib=no
    fi,
)

tryperl=yes
AC_ARG_WITH(perl,
[  --with-perl                     Look for perl.],
    if test "x$withval" = "xyes"; then
      tryperl=yes
    elif test "x$withval" = "xno"; then
      tryperl=no
    fi,
)

tryswig=yes
AC_ARG_WITH(swig,
[  --with-swig                     Look for swig.],
    if test "x$withval" = "xyes"; then
      tryswig=yes
    elif test "x$withval" = "xno"; then
      tryswig=no
    fi,
)

AC_PROG_CC
AM_PROG_LIBTOOL
AC_STDC_HEADERS
AC_CHECK_FUNCS(getaddrinfo)

AC_SUBST(SNMPLIBS)
AC_SUBST(OPENIPMI_VERSION_MAJOR)
AC_SUBST(OPENIPMI_VERSION_MINOR)
AC_SUBST(OPENIPMI_VERSION_RELEASE)
AC_SUBST(OPENIPMI_VERSION_EXTRA)

# Find pkg-config
pkgprog=
AC_PATH_PROG(pkgprog, pkg-config)

# Handle GLIB support
glibprog=
if test "x$tryglib" != "xno"; then
   if test "x$pkgprog" != "x"; then
      glibprog=$pkgprog
   else
      AC_PATH_PROG(glibprog, glib-config)
   fi
fi
GLIB_CFLAGS=
GLIB_LIBS=
if test "x$glibprog" != "x"; then
   # Try 2.0 first
   GLIB_CFLAGS=`$glibprog --cflags gthread-2.0 2>/dev/null`
   if test $? = 0; then
      GLIB_VERSION='2.0'
      GLIB_LIBS=`$glibprog --libs gthread-2.0 2>/dev/null`
   else
      # Now try 1.2
      GLIB_CFLAGS=`$glibprog --cflags gthread`
      if test $? = 0; then
	 GLIB_VERSION='1.2'
	 GLIB_LIBS=`$glibprog --libs gthread`
      fi
   fi
fi
   
if test "x$GLIB_CFLAGS" != "x"; then
   AC_DEFINE(HAVE_GLIB)
   GLIB_DIR=glib
   GLIB_LIB='$(top_builddir)/glib/libOpenIPMIglib.la'
   GLIB_PKGCONF=OpenIPMIglib.pc
else
   GLIB_DIR=
   GLIB_LIB=
   GLIB_PKGCONF=
fi
AC_SUBST(GLIB_DIR)
AC_SUBST(GLIB_VERSION)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)
AC_SUBST(GLIB_LIB)
AC_SUBST(GLIB_PKGCONF)

# Handle PERL support
perlprog=
if test "x$tryperl" != "xno"; then
   AC_PATH_PROG(perlprog, perl)
fi
if test "x$perlprog" != "x"; then
   perldir=`$perlprog -e 'for $i (@INC) { if (-r "$i/CORE/perl.h") { print "$i/CORE"; last; } }'`
   if test "x$perldir" == "x"; then
      perldir=
   else
      if echo "$perldir" | grep "UNKNOWN"; then
	 perldir=
      else
         perldir=`echo $perldir | sed 's/^.*,\(\/.*\).;$/\1/'`
	 if test ! -d $perldir; then
	    perldir=
	 fi
      fi
   fi
fi

if test "x$perldir" != "x"; then
   AC_DEFINE(HAVE_PERL)
   PERL_DIR=perl
   PERL_CFLAGS="-I $perldir `$perlprog -V:ccflags | sed 's/^.*ccflags=.\(.*\).;$/\1/'`"
else
   PERL_DIR=
   PERL_CFLAGS=
fi
AC_SUBST(PERL_DIR)
AC_SUBST(PERL_CFLAGS)

# Now check for swig
swigprog=
if test "x$tryswig" != "xno"; then
   AC_PATH_PROG(swigprog, swig)
fi
if test "x$swigprog" != "x"; then
   AC_DEFINE(HAVE_SWIG)
   SWIG_DIR=swig
else
   SWIG_DIR=
fi
AC_SUBST(SWIG_DIR)

# Handle SNMP support
if test "x$tryucdsnmp" != "xno"; then

   HAVE_UCDSNMP=no
   HAVE_NETSNMP=no
   FOUND_SNMPINCL=no
   # Try net snmp first
   AC_CHECK_HEADER(net-snmp/net-snmp-config.h,
                   FOUND_SNMPINCL=yes; HAVE_NETSNMP=yes; )
   if test "x$FOUND_SNMPINCL" == "xno"; then
      # Try old UCD snmp
      AC_CHECK_HEADER(snmp_api.h, FOUND_SNMPINCL=yes; )
      if test "x$FOUND_SNMPINCL" == "xno"; then
          AC_CHECK_HEADER(ucd-snmp/snmp_api.h,
                   FOUND_SNMPINCL=yes;
		   AC_DEFINE(HAVE_ALT_UCDSNMP_DIR))
      fi
   fi

   if test "x$FOUND_SNMPINCL" == "xyes"; then
      if test "x$HAVE_NETSNMP" == "xyes"; then
         AC_CHECK_LIB(netsnmp, snmp_add, 
		      SNMPLIBS="-lnetsnmp $SNMPLIBS"
		      AC_DEFINE(HAVE_UCDSNMP)
		      AC_DEFINE(HAVE_NETSNMP)
		      HAVE_UCDSNMP=yes
		      HAVE_NETSNMP=yes,
		      ,
		      $SNMPLIBS)
         if test "x$HAVE_UCDSNMP" == "xno"; then
	     # Try net snmp with crypto
	     AC_CHECK_LIB(netsnmp, snmp_add_full, 
	                  SNMPLIBS="-lnetsnmp -lcrypto $SNMPLIBS"
			  AC_DEFINE(HAVE_UCDSNMP)
			  AC_DEFINE(HAVE_NETSNMP)
			  HAVE_UCDSNMP=yes
			  HAVE_NETSNMP=yes,
			  ,
			  -lcrypto $SNMPLIBS)
         fi
         if test "x$HAVE_UCDSNMP" == "xno"; then
	     AC_MSG_WARN([Found NET SNMP include files, but could not find libraries])
	 fi
      else
         AC_CHECK_LIB(snmp, snmp_open_ex, 
		      SNMPLIBS="-lsnmp $SNMPLIBS"
		      AC_DEFINE(HAVE_UCDSNMP)
		      HAVE_UCDSNMP=yes,
		      ,
		      $SNMPLIBS)
         if test "x$HAVE_UCDSNMP" == "xno"; then
            # Try with the crypto lib
            AC_CHECK_LIB(snmp, snmp_sess_perror, 
		         SNMPLIBS="-lsnmp -lcrypto $SNMPLIBS"
			 AC_DEFINE(HAVE_UCDSNMP)
			 HAVE_UCDSNMP=yes,
			 ,
			 -lcrypto $SNMPLIBS)
         fi
         if test "x$HAVE_UCDSNMP" == "xno"; then
	     AC_MSG_WARN([Found UCD SNMP include files, but could not find libraries])
	 fi
      fi
   fi
fi

AC_OUTPUT(Makefile
	  utils/Makefile
	  lib/Makefile
	  unix/Makefile
	  glib/Makefile
	  ui/Makefile
	  lanserv/Makefile
	  sample/Makefile
	  doc/Makefile
	  man/Makefile
	  swig/Makefile
	  swig/perl/Makefile
	  cmdlang/Makefile
	  include/Makefile
	  include/OpenIPMI/Makefile
	  include/OpenIPMI/ipmiif.h
	  include/OpenIPMI/internal/Makefile
	  include/linux/Makefile
	  include/net/Makefile
	  OpenIPMI.spec
	  OpenIPMIutils.pc
	  OpenIPMI.pc
	  OpenIPMIpthread.pc
	  OpenIPMIposix.pc
	  OpenIPMIglib.pc
	  OpenIPMIcmdlang.pc
	  OpenIPMIui.pc)
