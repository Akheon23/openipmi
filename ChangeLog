
2003-07-03 Corey Minyard <cminyard@mvista.com>

	* sdr.c: When handling SDR data, be sure to check that the MC is
	valid in responses, so that this properly handles MCs going away.

2003-06-11 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.4.3

	* include/net/af_ipmi.h: Added include file for IPMI socket.
	* Makefile.am: ditto
	* configure.in: ditto
	* include/net/Makefile.am: ditto

	* lanserv.c: Modified to use IPMI socket if available.

2003-06-07 Corey Minyard <cminyard@mvista.com>

	* Makefile.am: Clean up so that every '.c' is only listed once.
	When used in multiple programs, create a '.o' in all but one
	instance.  Still need to figure out how to correctly refer to
	.a libraries created by a '.la'.

	* all: License updates.

2003-06-06 Corey Minyard <cminyard@mvista.com>

	* sel.c: Modified to not use the state to tell if something is
	going on, but to use the opq.  Deletes don't modify the state, but
	they may still be in process at deletion.

	* mc.c: Fixed a memory leak.

2003-06-05 Corey Minyard <cminyard@mvista.com>

	* sel.c: Fixed a SEL destruction race condition.

2003-06-04 Corey Minyard <cminyard@mvista.com>

	* OpenIPMI.tex, README.Force: Minor updates to make some things
	clearer.

	* basic_ui.c: Fixed a problem with SMI connections.

	* ilist.c, ilist.h: Added some helper functions.

	* ui_os.c: Switch from /dev/random to /dev/urandom to avoid
	blocking for lack of entropy.

	* ui.c: Added a total bytes in SDR count.

	* sdr.c: Added a pipeline to the SDR fetch, to speed it up for
	high-latency links.

2003-06-03 Corey Minyard <cminyard@mvista.com>

	* ipmicmd.c: Added the latency testing code back in.

2003-06-02 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.4.2.

	* sensor.c: Moved the removal of the sensor from the entity to the
	place of its final destruction, so the entity will exist during
	callbacks related to destruction of the sensor.

	* ipmi_lan.c: Send a close session command when the connection is
	closed.

2003-05-30 Corey Minyard <cminyard@mvista.com>

	* OpenIPMI.texi: Updated docs for handling multiple MCs.

	* domain.c: Add a timer to wait for a while after detecting that
	everyone is inactive before acting.  This should solve race
	conditions where something deactivates one and activates another,
	to avoid an activation war between software devices.

	* domain.c: Reworked some timers so that the handle shutdowns
	correctly.

	* ipmi_lan.c: Changed the failure timeout to 3 seconds.

	* lanserv.c: Send all output to stdout in non-daemon mode.

2003-05-29 Corey Minyard <cminyard@mvista.com>

	* domain.c: More fixes for supporting multiple connections.

	* entity.c: Fixed the presence handling to use an entity id
	instead of an entity pointer since the entity can go away.

	* ipmi_lan.c: Modified broadcasts to not retry.

	* ipmi_lan.c: Added timer frees in a few places that needed them.

	* ipmi_oem_force_conn.c: Changed the broadcast of the deactivate
	to a normal message so it gets retried.

	* include/linux/ipmi.h: Added changes for setting the timing
	parameters.

	* lanserv.c: Added changes for setting the timing parameters.

	* sdr.c: Fetch sdr 0 to verify the reservation, not the current
	record.  Also fixed some completion stuff.

	* sensor.c: Fixed a shutdown case.

2003-05-28 Corey Minyard <cminyard@mvista.com>

	* sel.c: Fixed a shutdown double-free.

	* sdr.c: Fixed some shutdown free problems.

	* mc.c: Fixed some MC shutdown problems.

	* ilist.c, ilist.h: Set the malloced variable for the supplied
	entry automatically.

	* sdr.c: Removed some bogus frees.

	* mc.c: Set the MC active when it is handled as a new MC.

	* ipmiif.h: Removed ipmi_domain_get_user_data, since it doesn't
	make sense any more.

	* domain.c: Added support for multiple connections to a single
	IPMB box.

	* ipmi_oem_force_conn.c: Added handling for active and inactive
	connections.

2003-05-26 Corey Minyard <cminyard@mvista.com>

	* lanserv.c: Fixed the address reading code to increment the
	address count when it sees an address in the configuration file.

2003-05-19 Corey Minyard <cminyard@mvista.com>

	* mc.c: Modified the event receiver setting code to not modify the
	event receiver unless it is pointing to a nonexistant MC or an MC
	that does not have an event receiver.

2003-05-16 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.4.1
	
	* lanserv_oem_force.c, ipmi_oem_force.c: The permission from
	Force Computers(tm) came much faster than I expected.  This
	included some OEM handling for the various Force cards, for
	switching the cards to/from BMC mode and for fetching the IPMB
	address.  Thanks to Force for their help.
	
	* ipmi.c, lanserv.c, ipmicmd.c: Added calls to initialize the
	Force OEM code.

2003-05-15 Corey Minyard <cminyard@mvista.com>

	* lanserv.h: Moved to include/OpenIPMI
	
	* lanserv.c: Handled move of lanserv.h
	* lanserv_asf.c: ditto
	* lanserv_ipmi.c: ditto
	* lanserv_emu.c: ditto

	* configure.in: Move to version 0.4.0
	
	* ipmicmd.c: Changed the order of the lun and netfn to make it
	consistent with ipmi_ui.

	* ipmicmd.1: Wrote some docs for ipmicmd.

	* include/OpenIPMI/ipmi_conn.h: Reworked the connection reporting,
	changed "fail" to "change" everywhere to make it more accurate,
	and report all connection changes through the same interface.
	* domain.c: ditto
	* ipmi_lan.c: ditto
	* ipmi_smi.c: ditto
	* ipmicmd.c: ditto
	* sample.c: ditto
	* ui.c: ditto
	* include/OpenIPMI/ipmi_lan.h: ditto
	* include/OpenIPMI/ipmi_ui.h: ditto
	* include/OpenIPMI/ipmiif.h: ditto

	* include/OpenIPMI/ipmiif.h, domain.c: Modified the domain
	interface to support more than one connection (although the code
	still only supports one).

2003-05-14 Corey Minyard <cminyard@mvista.com>

	* ipmi.c, conn.c: Moved some connection handling stuff into a
	new file.
	* include/OpenIPMI/ipmi_int.h: ditto
	* include/OpenIPMI/ipmi_conn.h: ditto

	* include/OpenIPMI/ipmi_conn.h: Added a lot of connection handling
	changes for handling different and dynamic IPMB addresses, and for
	supporting the concept of a connection being "active".
	* ipmi.c: ditto
	* ipmi_lan.c: ditto
	* ipmicmd.c: ditto
	* ipmi_smi.c: ditto
	* domain.c: ditto
	* ipmi.c: ditto
	* ipmi.c: ditto

	* lanserv.h, lanserv.c, lanserv_ipmi.c: Added a lot of OEM
	handling.

	* sensor.c: Fixed a missing return.

2003-05-13 Corey Minyard <cminyard@mvista.com>

	* ipmi.c, ipmi_lan.c, ipmi_smi.c: Added infrastructure so that
	OEMs can see connections by device id when the connection is
	first established.
	* include/OpenIPMI/ipmi_oem.h: ditto
	* include/OpenIPMI/ipmi_int.h: ditto
	
	* ipmicmd.c: Reworked this so it sits on top of an IPMI
	connection.  This means you can make LAN connection now.

	* ipmi_utils.c: Split out some generic IPMI things that don't
	depend on anything else.
	
	* everything: Added the concept of an IPMI domain, and replaced
	the "BMC" with the "domain".  This was not a huge change from a
	usage point of view, but was a big restructure internally.  This
	way, we can support multiple BMC connections into a domain.

2003-05-05 Corey Minyard <cminyard@mvista.com>

	* ui.c: Added connection retrying.

2003-05-04 Corey Minyard <cminyard@mvista.com>

	* ipmi_lan.c: Got IPMI LAN stuff working again.

	* ui.c: Updates for the new id handling.

2003-05-02 Corey Minyard <cminyard@mvista.com>

	* lanserv_emu.c: Added an emulator for testing.

	* include/OpenIPMI/ipmi_conn.h: Added a way for the interface code
	to provide the IPMB address.
	* mc.c, ipmi_lan.c, ipmi_smi.c: ditto

	* mc.c: Added a valid field to the MC, right now just for BMCs, to
	handle shutdown races.

2003-05-01 Corey Minyard <cminyard@mvista.com>

	* include/OpenIPMI/ipmi_types.h: A restructure of the id's was
	done to remove the MC validation calls from the rest of the code
	and use the standard MC callbacks.  It also added sequence
	numbers to MCs and MC ids so that if an MC is freed and the same
	memory is re-allocated, the MC still won't compare with an old
	id.
	* include/OpenIPMI/ipmi_mc.h: ditto
	* include/OpenIPMI/ipmi_sensor.h: ditto
	* control.c: ditto
	* entity.c: ditto
	* sensor.c: ditto
	* mc.c: ditto
	* sdr.c: ditto
	* sel.c: ditto

	* include/OpenIPMI/ipmi_int.h, ipmi.c: Added a sequence number
	allocator.

2003-04-30 Corey Minyard <cminyard@mvista.com>

	* lanserv.c: Modified the server to support two LAN connections
	specified in the config file, and modified it to always return the
	message from the file descriptor that received the message.

	* mc.c: Modified the SEL time code to set the time on the SEL,
	not get the time, so the SEL time will be correct.

2003-04-29 Corey Minyard <cminyard@mvista.com>

	* ipmi_lan.c, include/OpenIPMI/ipmi_lan.h: Added multiple IP
	addresses for a BMC.

	* include/OpenIPMI/ipmi_conn.h: Started restructuring the
	connection code so that the user allocates the connection and
	passed it into the main IPMI code.  This decouples the main IPMI
	code from the connection code, and readies support for having more
	than one BMC connection into a box.
	* include/OpenIPMI/ipmi_lan.h: ditto
	* include/OpenIPMI/ipmi_smi.h: ditto
	* include/OpenIPMI/ipmi_ui.h: ditto
	* include/OpenIPMI/ipmiif.h: ditto
	* mc.c: ditto
	* ipmi_lan.c: ditto
	* ipmi_smi.c: ditto
	* basic_ui.c: ditto
	* sample.c: ditto
	* ui.c: ditto

	* include/OpenIPMI/ipmi_types.h: Moved ipmi_con_t as an opaque
	type into here, so the user can access it.
	
2003-04-28 Corey Minyard <cminyard@mvista.com>

	* lanserv.c, lanserv.h, lanserv_ipmi.c: Added logs for error and
	notification handling.

	* lanserv.c, lanserv.h, lanserv_ipmi.c: Added an OEM message
	handler.

2003-04-27 Corey Minyard <cminyard@mvista.com>

	* lanserv.c, lanserv.h, lanserv_ipmi.c: Added timeout handling
	for sessions.

2003-04-26 Corey Minyard <cminyard@mvista.com>

	* lanserv_ipmi.c: Added incoming session sequence number
	checking.

2003-04-25 Corey Minyard <cminyard@mvista.com>

	* lanserv.c, lanserv_ipmi.c, lanserv_asf.c, lanserv.h: Added a LAN
	to SI interface.

	* include/OpenIPMI/ipmi_auth.h: Abstracted the memory allocation
	so the auth routines don't depend on OpenIPMI.
	* ipmi_lan.c: ditto
	* ipmi_auth.c: ditto
	* md2.c, md2.h: ditto
	* md5.c, md5.h: ditto
	* ipmi_lan.c: ditto

	* ipmi_malloc.c, include/OpenIPMI/ipmi_int.h: Made ipmi_mem_alloc
	take an int size, not a size_t size.

2003-04-24 Corey Minyard <cminyard@mvista.com>

	* strings.c: Fixed a bug in getting the sensor reading name.

	* priv_table.c, include/OpenIPMI/ipmi_auth.h: Added a table and
	handling for figuring out if a message is permitted for a certain
	priviledge level.
	
	* include/OpenIPMI/ipmi_msgbits.h: Added all the message ids from
	table G-1 from the IPMI 1.5 spec.

2003-04-23 Corey Minyard <cminyard@mvista.com>

	* ipmi.c, ipmi_auth.c: Created ipmi_auth.c from some stuff in
	ipmi.c

	* include/OpenIPMI/ipmi_msgbits.h: Added a bunch of message ids.

2003-04-22 Corey Minyard <cminyard@mvista.com>

	* ipmicmd.c, include/linux/ipmi.h: Added a debug interface to
	ipmicmd.

	* ui.c: Added a way to dump all an mc's information.

2003-04-17 Corey Minyard <cminyard@mvista.com>

	* ui.c: Fixed a double free on set_control error conditions.

	* mc.c: Added set functions for all the specific MC capabilities.

	* configure.in: Move to version 0.3.1.

	* mc.c: Added a mechanism to ignore IPMB addresses.

	* configure.in: Move to version 0.3.0b.

	* ui.c: Ignore control values when an error is reported from
	reading a control.

2003-04-16 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.3.0.

	* mc.c: During shutdown, delete entities after sensors and
	controls because sensors and controls may refer to entities.

2003-04-15 Corey Minyard <cminyard@mvista.com>

	* ipmi_lan.c: Implemented a max outstanding message count to
	avoid killing a LAN BMC, and implemented a queue to hold extra
	messages.

2003-04-15 Duncan Laurie <duncan@sun.com>

	* ipmi_lan.c: Fix a couple of bits when the Send Message variant
	in lan_send is used.  Fix a double-unlock condition that
	happens with LAN response timeouts.

	* ipmi_lan.c: add a Set Session Privilege Level command to the end
	of the session setup sequence.  It is required because despite
	what you use the in the "privilege level" field in Activate
	Session command it opens in User level.

2003-04-15 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.2.7.

	* include/OpenIPMI/ipmi_mc.h, OpenIPMI.texi:  Change the name
	of ipmi_bmc_get_startup_SEL_time() to ipmi_mc_get_startup_SEL_time(),
	in the docs and includes, since it had already changed in the code.

2003-04-14 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.2.6.

2003-04-10 Louis Zhuang <louis.zhuang@linux.co.intel.com>, Corey Minyard <cminyard@mvista.com>

	* include/OpenIPMI/selector.h: Added sel_select() to the include
	file.

	* sample.c: Added an example of using sel_select().

	* selector.c: Some cleanups.

2003-04-03 Duncan Laurie <duncan@sun.com>

	* ipmi_lan.c: Fixups trying to the the lan code working.

2003-04-01 Corey Minyard <cminyard@mvista.com>

	* mc.c: Changed the event receiver setting so that it is always
	done for new MCs, and it is done after the SDRs are read.  That
	way, any pending conditions for a new MC will be generated
	immediately with a valid sensor to handle it.

	* mc.c: Modified event handling so that events from the BMC get
	delivered properly.  It was not converting events from the system
	interface properly.

2003-03-31 Corey Minyard <cminyard@mvista.com>

	* all: Really release verion 0.2.5.

	* ui.c: Reset the termios on an error exit, too.

	* sdr.c: Fixed the SDR fetch to only fetch the exact amount of
	data left, instead of trying to get as much as possible, when at
	the end of the SDR.  Apparently some hardware doesn't handle this
	properly.

2003-03-27 Corey Minyard <cminyard@mvista.com>

	* ipmi_smi.c: Removed the timing of commands, because the
	low-level driver does it, and it introduced some race conditions.
	Specifically, if OpenIPMI timed out the command and the memory
	address got reused before the message came back in, then the
	message would be delivered to the wrong place.  It generally only
	happened when sitting for a long time in the debugger (so a whole
	slew of things happened at once).

	* example_oem.c, Makefile.am, OpenIPMI.texi: Added an example OEM
	plugin file for others to use to build their plugins.

2003-03-26 Corey Minyard <cminyard@mvista.com>

	* mc.c: Fixed some problems with non-BMC SELs.

	* ui.c: Added a log at startup to tell you to wait until startup
	is complete.

	* ui.c: Added a quit command.

2003-03-25 Corey Minyard <cminyard@mvista.com>

	* ui.c: The UI will no longer attempt to read unreadable
	controls.

2003-03-19 Corey Minyard <cminyard@mvista.com>

	* sdr.c: Modified the reservation support handling for device
	SDRs.  Start out assuming that it is supported, and if it returns
	an invalid command then assume it is not supported.  There is no
	clear way to determine if reservation is supported on device SDRs.

	* sdr.c: Check the proper MC flag if it is a sensor SDR to see if
	it supports device SDRs.

	* configure.in: Updated version to 0.2.5.

2003-03-14 Corey Minyard <cminyard@mvista.com>

	* sensor.c: Yet one more cleanup for compact sensor records,
	increment the source index properly.

	* sensor.c: Removed handle_deleted_sensor() and always use
	ipmi_sensor_destroy() to clean up a sensor.

	* control.c, include/OpenIPMI/ipmi_control.h: Added a count
	for the number of controls in a control repository.

	* sensor.c, include/OpenIPMI/ipmi_sensor.h: Added a count
	for the number of sensors in a sensor repository.

	* mc.c, include/OpenIPMI/ipmi_mc.h: Added the concept of an
	MC being active or inactive.  Active MCs are present in the
	system.  Inactive MCs are not present but referenced by SDRs, so
	they cannot be deleted.

2003-03-13 Jeff Zheng <Jeff.Zheng@Intel.com>

	* sample.c: Added a simple sample application.

2003-03-12 Corey Minyard <cminyard@mvista.com>

	* mc.c: Fixed a cleanup case in the routine that finds or creates
	an MC.

	* sensor.c: Minor sensor cleanup additions.

	* sensor.c: Fixed compact sensor records to copy the data contents
	instead of the pointer.

2003-03-06 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.2.4.

	* mc.c: Cleaned up some naming (use bmc when it is a bmc).

	* ui.c, basic_ui.c: Added a "reconnect" command to disconnect and
	reconnect to the BMC.

	* configure.in: Move to version 0.2.3.

	* mc.c: Added rescanning the entities when a connection comes
	back.

2003-03-05 Corey Minyard <cminyard@mvista.com>

	* include/OpenIPMI/ipmiif.h: Fixed the description of the
	ipmi_bmc_add_con_fail_handler() call to be accurate and complete.

	* mc.c: Added starting a rescan of the IPMB bus when a connection
	comes back.

2003-02-27 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.2.2.

	* entity.c: Cleaned up entity presence detection so it works
	properly with an entity presence sensor.

	* sdr.c: Fixed a bug where the SDR fetch would go into an infinite
	loop if the last SDR was not a sensor.

	* ui.c: Fixed things so the "-c" option (not full screen) works
	ok.

2003-02-26 Corey Minyard <cminyard@mvista.com>

	* include/OpenIPMI/os_handler.h: Added thread functions and moved
	all the function OpenIPMI does not use to the end.

2003-02-25 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.2.1.

2003-02-25 Todd David <todd.c.davis@intel.com>

	* ipmi.c: Added a check for the lock actually being allocated in
	ipmi_check_lock().

2003-02-24 Corey Minyard <cminyard@mvista.com>

	* test1.c, Makefile.am: Removed this bogus file.

	* sensor.c: Handle the same sensor received multiple times from
	the same SDR.  This actually moves the sdr_sensors source array
	into the sensor itself so it can be deleted regardless of where it
	came from.

	* sdr.c: The Get Device SDR Info command is optional (even if the
	device has device SDRs, for some strange reason), so default the
	information if it's not implemented but the device supports device
	SDRs.

	* mc.c: Ignore device SDRs if we get an error back from querying
	them.

2003-02-21 Corey Minyard <cminyard@mvista.com>

	* configure.in: Moved to version 0.2.0.

	* include/OpenIPMI/ipmiif.h, include/OpenIPMI/ipmi_sensor.h
	Added rearm support for sensors.
	* sensor.c: ditto
	* ui.c: ditto

	* include/OpenIPMI/ipmiif.h: The spec was very confusing in
	section 29.11 and 29.14 (1.5 spec) about the event messages and
	scanning enable/disable.  After studying the spec more, I'm pretty
	sure that 1 means enabled and 0 means disabled.  I think the spec
	is saying that 0 means disabled in the way it presents this.
	* include/OpenIPMI/ipmi_int.h: ditto
	* sensor.c: ditto
	* entity.c: ditto
	* ipmi.c: ditto
	* mc.c: ditto
	* ui.c: ditto

	* mc.c: Changed setting the event receiver for an MC to only do it
	if the event receiver was set incorrectly.

	* sel.c: Fixed a missing unlock.

	* sel.c: Modified the way individual record deletes occur and
	fetches occur to use an opq.  This way, reservations won't get
	mixed up.  Also modified individual deletes to check the value of
	the event before they actually delete it, to make 100% sure they
	are deleting the right event.

	* include/linux/ipmi.h, include/linux/ipmi_msgdefs.h: Converted to
	the new versions of the kernel headers.
	* include/OpenIPMI/ipmi_addr.h: ditto
	* include/OpenIPMI/ipmi_types.h: ditto
	* ipmi_smi.c: ditto

	* ipmicmd.c, Makefile.am: Added ipmicmd to this code.

2003-02-20 Corey Minyard <cminyard@mvista.com>

	* ui.c: Fixed a memory leak with controls.

	* sel.c: Make sure to report that a sel delete completed, even if
	we can only clear the whole SEL when all are done.

	* include/OpenIPMI/ipmi_msgbits.h: Added event receiver commands.

	* mc.c: Fixed a memory leak deleting logs.

	* ui.c: Added a command to scan an IPMB address.

	* mc.c: Added code to set the event receiver for MCs to whatever
	the current event receiver device is.

	* ipmi.c, include/OpenIPMI/ipmi_addr.h: Added a way to get the
	slave address for an address.

	* mc.c: Since the OEM code can change the values from get device
	id, the comparison code (to tell if an MC has changed) was changed
	to used a real copy of the values from the get device id, instead
	of the used values.

	* Makefile.am, ipmi.c, ipmi_malloc.c: Split off the memory
	debugging stuff into a separate file.

	* Makefile.am: Added heap.h to the file.

	* mc.c, include/OpenIPMI/ipmi_oem.h: Changed the name of the
	MC removal callback to reflect it's function better (since it's
	not BMC-related).

	* entity.c: Fixed a memory leak with presence sensors.

2003-02-19 Corey Minyard <cminyard@mvista.com>

	* mc.c, include/OpenIPMI/ipmi_conn.h: Modified the ipmi_init_con()
	call to take the slave address.
	
	* ipmi_lan.c, ipmi_smi.c: Now pass in the slave address to
	ipmi_init_con().

	* OpenIPMI.texi: Updated docs for changes.

	* ui.c: Various cleanups for the SMI address and the new SEL
	setup.
	
	* ilist.c, ilist.h: Added a way to traverse the list backwards.

	* ipmi_smi.c: Converted the BMC to use an SMI address.

	* mc.c, include/OpenIPMI/ipmi_mc.h: Added a way for the OEM code
	to add a way to fetch the SMI slave address.

	* mc.c, include/OpenIPMI/ipmiif.h, include/OpenIPMI/ipmi_mc.h, sel.c:
	Changed SEL support to be per-MC (as it should be) and not on the
	BMC.  This will allow support for SELs not on the MC, and for
	multiple SEL devices in a system.  It required the removal of
	ipmi_bmc_del_event_by_recid(), and a modification to the event
	structure, since the system now has to know what MC the event came
	from.

	* include/OpenIPMI/ipmi_types.h: Added an MC to the event so we
	know which MC it came from.

2003-02-18 Corey Minyard <cminyard@mvista.com>

	* ui.c: Added a way to set the event enables.

	* sdr.c: Made some of the err info logs unique.

	* mc.c, entity.c: memory leak removals
	
	* ilist.c, ilist.h, ipmi.c: Added separate allocation routines
	for the ilist code.
	
	* mc.c, include/OpenIPMI/ipmi_oem.h: Added a shutdown callback to
	the OEM registeration.

	* mc.c, include/OpenIPMI/ipmi_mc.h: Added global shutdown code for
	the mc.

	* ipmi.c, include/OpenIPMI/ipmiif.h: Added global shutdown code.
	
	* ipmi.c, include/OpenIPMI/ipmi_int.h: Added memory debugging
	code.
	
	* basic_ui.c: Converted over to the new memory debugging code.
	* control.c: ditto
	* entity.c: ditto
	* ipmi.c: ditto
	* ipmi_lan.c: ditto
	* ipmi_smi.c: ditto
	* mc.c: ditto
	* md2.c: ditto
	* md5.c: ditto
	* opq.c: ditto
	* sdr.c: ditto
	* sel.c: ditto
	* selector.c: ditto
	* sensor.c: ditto
	* ui.c: ditto
	* ui_command.c: ditto
	* ui_keypad.c: ditto
	* ui_os.c: ditto

	* selector.c, heap.h: Split out the heap code into a generic.

	* test_btree.c: Added a test for the heap code.

2003-02-13 Corey Minyard <cminyard@mvista.com>

	* configure.in: Moved to version 0.1.4.

2003-02-12 Corey Minyard <cminyard@mvista.com>

	* mc.c, sdr.c, sel.c: Changed all 1-bit integers to unsigned so
	that comparisons work properly.
	
2003-02-09 Corey Minyard <cminyard@mvista.com>

	* configure.in: Moved to version 0.1.3.

	* Makefile.am: Fixed include of "include" dir to be based on
	srcdir, removed -Werror.

	* src.c, selector.c, sel.c, ui.c: Fixed some deprecated
	operations to avoid warnings in gcc3.x.

2003-02-03 Corey Minyard <cminyard@mvista.com>

	* mc.c, include/OpenIPMI/ipmiif.h, sel.c, include/OpenIPMI/ipmi_sel.h:
	Modified the previous change to report the number of entries in
	the SEL, since the number of total entries available in the SEL
	may not be available.
	
	* mc.c, include/OpenIPMI/ipmiif.h, sel.c, include/OpenIPMI/ipmi_sel.h:
	Added a way to get the estimated number of entries left for new
	events in the SEL.

2003-01-30 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move to version 0.1.2.

	* include/OpenIPMI/ipmi_msgbits.h: Added the master read/write
	command.

2003-01-29 Corey Minyard <cminyard@mvista.com>

	* mc.c, include/OpenIPMI/ipmiif.h: Added a mechanism for changing
	the SEL rescan timers and the bus rescan timers.

2003-01-28 Corey Minyard <cminyard@mvista.com>

	* ui.c: Fixed problems with the previous va_arg problem.

2003-01-27 Corey Minyard <cminyard@mvista.com>

	* entity.c: Lots of little cleanup for parent-child relationships
	and shutdown.

	* sensor.c: Lots of little cleanups for handling new SDRs.

	* ui.c: Fixed some problems with threshold display, and added
	the current value of the threshold (out of range).
	
	* ui.c: Fixes some va_arg problems.

	* sensor.c: Fixed problems with sensor allocation.

2003-01-24 Corey Minyard <cminyard@mvista.com>

	* ui.c: Changed shutdown code to close the connection first.
	
	* mc.c: Modified the close connection code to avoid locking
	problems.

	* include/OpenIPMI/ipmiif.h: Changed the format of the close done
	callback to remove the BMC (since it will be gone).
	
	* selector.c, include/OpenIPMI/selector.h: Modified the selector
	code to be reentrant
	
	* ipmi.c, include/OpenIPMI/ipmi_int.h: Added a way to allocate a
	lock using the global IPMI selector.

	* basic_ui.c, test1.c: Changed to account for the selector
	changes.

2003-01-22 Corey Minyard <cminyard@mvista.com>

	* basic_ui.c, ui.c, include/OpenIPMI/ipmi_ui.h: Start working on a
	command-line only version of the ui.

	* ui.c: Rework to abstract the output, getting ready for doing
	command-line only.

	* mc.c, include/OpenIPMI/ipmi_mc.h: Added support for setting more
	device support bits.

	* ui.c: Added a command to dump the SDRs.
	
	* sdr.c: Reworked the fetching of SDRs to get the SDR info first,
	then to do the reservation if it is required.

	* sensor.c: Fixed the sensor calculation values to be the right
	signedness.
	
	* mc.c: Modified SEL fetch to restart the timer after the previous
	SEL fetch completes.

2003-01-21 Corey Minyard <cminyard@mvista.com>

	* configure.in: Went to version 0.1.1

2003-01-20 Corey Minyard <cminyard@mvista.com>

	* ui.c: Added a list_sel command.

	* ui.c: Modified the clear sel command to go through all the
	events and delete them, instead of clearing the SEL with a
	command.

	* sel.c: Fixed the next, previous, first, last, and get all
	operations to take into account deleted events.  Also fixed a bug
	where re-adding an event that was deleted would cause the count to
	be wrong.

2003-01-17 Corey Minyard <cminyard@mvista.com>

	* ui.c, include/OpenIPMI/ipmi_int.h: Added a debug flag to disable
	LAN connections.

2003-01-16 Corey Minyard <cminyard@mvista.com>

	* mc.c, include/OpenIPMI/ipmiif.h, include/OpenIPMI/ipmi_conn.h:
	Added a mechanism to report failures of the lower-level
	connection, and added code to ignore periodic events (bus scan,
	SEL scan) while the connection is down.
	* ipmi_lan.c: ditto
	* ipmi_smi.c: ditto
	
	* OpenIPMI.texi: Documented the changes to the SEL code.
	
	* mc.c, include/OpenIPMI/ipmi_oem.h: Added an OEM callback for MC
	removal.

	* mc.c: Added detection of when an MC goes away or changes.

	* mc.c: Cleaned up the MC cleanup code to consolidate it.

	* entity.c: Modified entity sensor/control deletion so that if all
	the entities and sensors are gone, and the entity was
	auto-created, that the entity itself would be destroyed.

	* sel.c: Reworked the event deletion code so that it works even
	without the ability to delete individual entries.  If all the
	entries in the local database are deleted, it will clear out the
	database (if the reservation hasn't been lost).

2003-01-15 Corey Minyard <cminyard@mvista.com>

	* sel.c: Fixed a locking problem with SEL operations.
	
	* mc.c, include/OpenIPMI/ipmi_mc.h: Added a hook for event
	deletion handling, so OEM code can do its own event deletion.

	* mc.c, include/OpenIPMI/ipmi_mc.h: Added handling for ignoring
	events (only sending to the unhandled interface) for events that
	were already in the SEL at startup.

2003-01-14 Corey Minyard <cminyard@mvista.com>

	* ui.c: Added a fix for handling local interface BMCs.

2003-01-13 Corey Minyard <cminyard@mvista.com>

	* configure.in: Move version to 0.1.0.

	* OpenIPMI.texi: More work on docs.
	
	* sel.c, mc.c: Minor cleanups.

	* ipmi_smi.c: Modified the timeout to be a much larger value.
	The device drivers have their own timers, we just need to make
	sure something doesn't go wrong here.

2003-01-09 Corey Minyard <cminyard@mvista.com>

	* mc.c: Added a periodic rescan of the presence sensors
	periodically (with the bus scan).
	
	* ui.c: Added rescanning of entities when displaying them.
	
	* mc.c, include/OpenIPMI/mc.h, entity.c: Added support for
	handling unhandled (not delivered to the user) events, so the user
	can delete them if they like.

	* ui.c: The info wasn't being passed into the id-to-pointer
	converted for the mccmd command.
	
	* OpenIPMI.texi: More work on docs.

	* control.c: Fixed the calculation size for the non-standard entry
	array size.

2003-01-09 Corey Minyard <cminyard@mvista.com>

	* OpenIPMI.texi: More work on docs.
	* include/OpenIPMI/ipmi_control.h: ditto
	* include/OpenIPMI/ipmi_sensor.h: ditto

	* include/OpenIPMI/ipmi_control.h, control.c: Added a missing
	ipmi_control_send_command_addr() function.

	* include/OpenIPMI/ipmi_control.h, control.c: Added a cleanup
	handler for the OEM info.
	* include/OpenIPMI/ipmi_sensor.h, sensor.c: ditto

	* entity.c, mc.c: Added an entity-specific lock, and used it where
	entities were specifically being locked.

	* ipmi_sensor.c, sensor.c: Made the sensor callbacks const.
	

2003-01-08 Corey Minyard <cminyard@mvista.com>

	* OpenIPMI.texi: More work on docs.

	* include/OpenIPMI/ipmi_int.h, mc.c, ui.c: Added an event debug
	level.
	
2003-01-07 Corey Minyard <cminyard@mvista.com>

	* OpenIPMI.texi: More work on docs.

	* Makefile.am: Turned on lock checking code generation.
	
	* include/OpenIPMI/ipmi_int.h: Cleaned up the debugging flags.

	* include/OpenIPMI/ipmi_sel.h: Changed the name "log" to "event".
	* include/OpenIPMI/ipmi_oem.h: ditto
	* include/OpenIPMI/ipmi_sensor.h: ditto
	* include/OpenIPMI/ipmi_types.h: ditto
	* include/OpenIPMI/ipmiif.h: ditto
	* entity.c: ditto
	* ipmi.c: ditto
	* mc.c: ditto
	* sel.c: ditto
	* sensor.c: ditto
	* test1.c: ditto
	* ui.c: ditto
	
	* sel.c: Cleaned up the rather broken locking.
	
	* sdr.c, include/OpenIPMI/ipmi_sdr.h: Cleaned up the names and
	cleaned up the rather broken locking.
	
	* control.c: Added IPMI logging information.
	* sdr.c: ditto
	* sel.c: ditto
	* sensor.c: ditto
	
	* configure.in: Changed to version 0.0.3.
	
	* include/OpenIPMI/log.h: Reworked log handling to add a log type.
	* include/OpenIPMI/os_handler.h: ditto
	* ipmi.c: ditto
	* ipmi_lan.c: ditto
	* ipmi_smi.c: ditto
	* mc.c: ditto
	* sel.c: ditto
	* ui.c: ditto
	* ui_os.c: ditto

	* include/OpenIPMI/log.h, include/OpenIPMI/ipmiif.h: moved log
	information from ipmiif.h to log.h.

2003-01-06 Corey Minyard <cminyard@mvista.com>

	* ui.c: Converted the bmc pointer to a bmc id.
	
	* ipmi_smi.c: Fixed a double unlock.
	
	* ipmi.c, include/OpenIPMI/ipmi_int.h, ui_os.c: Added code for
	checking for locking errors, fixed locking errors
	* control.c: ditto
	* entity.c: ditto
	* mc.c: ditto
	* sensor.c: ditto

	* include/OpenIPMI/os_handler.h: Added callbacks for telling
	if a lock is held.
	* entity.c, include/OpenIPMI/ipmiif.h, ui.c:  Added IPMI_ in front
	of some enumeration values.

2003-01-03 Corey Minyard <cminyard@mvista.com>

	* sensor.c: Modified the way the reporting of the hot-swap sensor
	is done, so it can support being a single offset in a sensor (like
	a slot sensor).
	* include/OpenIPMI/ipmi_sensor.h: ditto
	* include/OpenIPMI/ipmiif.h: ditto
	
	* ipmi_lan.c: Modified the timers to be alloc/free/start/stop, so
	they can be allocated and reused at will.
	* ipmi_smi.c: ditto
	* mc.c: ditto
	* test1.c: ditto
	* ui_os.c: ditto
	* include/OpenIPMI/os_handler.h: ditto

2002-12-18 Corey Minyard <cminyard@mvista.com>

	* Release of the 0.0.2 version
